{"version":3,"sources":["Components/Logo.js","Components/ItemsContainer.js","Components/Charts/PriceDifference.js","Components/Charts/LeftQuantity.js","Components/Charts/AverageSellPrice.js","Components/Charts/SoldAmount.js","Components/ItemInformation.js","Components/ItemInformationContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","ItemsContainer","ID","setID","useState","ebayItems","setEbayItems","useEffect","a","axios","result","data","queries","fetchData","map","item","onClick","id","name","PriceDifference","props","historyData","setData","history","labels","slice","reverse","date","datasets","label","avgPrice","fill","backgroundColor","borderColor","options","maintainAspectRatio","scales","y","ticks","color","font","weight","x","LeftQuantity","remainingQuantity","AverageSellPrice","soldHistory","Soldamount","totalQuantity","ItemInformation","ebayItemName","setEbayItemName","historyItems","setHistoryItems","method","url","results","console","log","fetchItemData","currentAvgPrice","currency","currentAvgSoldPrice","href","rel","target","currentRemainingQuantity","currentSoldQuantity","ItemInforamtionContainer","givenID","App","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dfdfd0f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport '../Visualization/Logo.css';\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div className='logo'>\r\n            Scraper\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ScraperLogo from '../Components/Logo.js';\r\nimport '../Visualization/ItemsContainer.css';\r\n\r\nexport default function ItemsContainer({ID, setID}) {\r\n    const [ebayItems, setEbayItems] = useState([]);\r\n    useEffect(() => {\r\n     \r\n         /* This function gets the data from the API URL */\r\n        const fetchData = async () =>{\r\n             const result =  await axios('http://91.225.104.238:3000/api/queries/get');\r\n             setEbayItems(result.data.data.queries);    \r\n          };\r\n          fetchData();\r\n       }, [])\r\n\r\n  \r\n    return (\r\n        <div className='items-container'>\r\n            <ScraperLogo />\r\n            <div className='objects'>\r\n                {ebayItems.map(item => (\r\n                    <li key={item.name} onClick={() => setID(item.id)} >\r\n                         <div>{item.name}</div>\r\n                         <hr />\r\n                    </li>\r\n        ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport '../../Visualization/PriceDifference.css';\r\n\r\nexport default function PriceDifference(props){\r\n\r\n    const [historyData, setData] = useState([])\r\n    useEffect(() => {\r\n     \r\n       const takeData = () =>{\r\n            setData(props.data.history);    \r\n         };\r\n         takeData();\r\n      }, [props.data.history])\r\n\r\nconst data = {\r\n  labels: historyData?.slice(0).reverse().map(item => (\r\n      item.date\r\n  )),\r\n  datasets: [\r\n    {\r\n      label: 'Kainų pokytis',\r\n      data:  historyData?.slice(0).reverse().map(item => (\r\n        item.avgPrice\r\n    )),\r\n      fill: false,\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgba(255, 99, 132, 0.2)',\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  maintainAspectRatio: false, \r\n  scales: {\r\n    y:{\r\n        ticks: {\r\n          color: \"black\",\r\n          font:{\r\n              weight: \"bold\"\r\n          }\r\n        }\r\n      },\r\n    x:{\r\n        ticks:{\r\n            color: \"black\",\r\n            font:{\r\n                weight: \"bold\",\r\n            },\r\n        }\r\n    },\r\n  },\r\n};\r\n    return(\r\n        <div className='price-chart'>\r\n          <Line data={data} options={options} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport '../../Visualization/LeftQuantity.css'\r\nexport default function LeftQuantity(props){\r\n    const [historyData, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n     \r\n       const takeData = () =>{\r\n            setData(props.data.history);    \r\n         };\r\n         takeData();\r\n      }, [props.data.history])\r\n\r\n\r\nconst data = {\r\n  labels: historyData?.slice(0).reverse().map(item => (\r\n      item.date\r\n  )),\r\n  datasets: [\r\n    {\r\n      label: 'Prekių likutis',\r\n      data:  historyData?.slice(0).reverse().map(item => (\r\n        item.remainingQuantity\r\n    )),\r\n      fill: false,\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgba(255, 99, 132, 0.2)',\r\n    },\r\n  ],\r\n};\r\nconst options = {\r\n    maintainAspectRatio: false, \r\n    scales: {\r\n      y:{\r\n          ticks: {\r\n            color: \"black\",\r\n            font:{\r\n                weight: \"bold\"\r\n            }\r\n          }\r\n        },\r\n      x:{\r\n          ticks:{\r\n              color: \"black\",\r\n              font:{\r\n                  weight: \"bold\",\r\n              },\r\n          }\r\n      },\r\n    },\r\n  };\r\n\r\n    return(\r\n        <div className='leftQuantity-chart'>\r\n            <Line data={data} options={options} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport '../../Visualization/AverageSellPrice.css';\r\n\r\nexport default function AverageSellPrice(props){\r\n    const [historyData, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n     \r\n       const takeData = () =>{\r\n            setData(props.data.soldHistory);    \r\n         };\r\n         takeData();\r\n      }, [props.data.soldHistory])\r\n\r\nconst data = {\r\n  labels: historyData?.slice(0).reverse().map(item => (\r\n      item.date\r\n  )),\r\n  datasets: [\r\n    {\r\n      label: 'Vidutinė pardavimo kaina',\r\n      data:  historyData?.slice(0).reverse().map(item => (\r\n        item.avgPrice\r\n    )),\r\n      fill: false,\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgba(255, 99, 132, 0.2)',\r\n    },\r\n  ],\r\n};\r\nconst options = {\r\n    maintainAspectRatio: false, \r\n    scales: {\r\n      y:{\r\n          ticks: {\r\n            color: \"black\",\r\n            font:{\r\n                weight: \"bold\"\r\n            }\r\n          }\r\n        },\r\n      x:{\r\n          ticks:{\r\n              color: \"black\",\r\n              font:{\r\n                  weight: \"bold\",\r\n              },\r\n          }\r\n      },\r\n    },\r\n  };\r\n\r\n  return(\r\n      <div className='averageSellPrice-chart'>\r\n          <Line data={data} options={options} />\r\n      </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport '../../Visualization/SoldAmount.css';\r\n\r\nexport default function Soldamount(props){\r\n    const [historyData, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n     \r\n       const takeData = () =>{\r\n            setData(props.data.soldHistory);    \r\n         };\r\n         takeData();\r\n      }, [props.data.soldHistory])\r\n\r\nconst data = {\r\n  labels: historyData?.slice(0).reverse().map(item => (\r\n      item.date\r\n  )),\r\n  datasets: [\r\n    {\r\n      label: 'Bendras parduotas prekių kiekis',\r\n      data:  historyData?.slice(0).reverse().map(item => (\r\n        item.totalQuantity\r\n    )),\r\n      fill: false,\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgba(255, 99, 132, 0.2)',\r\n    },\r\n  ],\r\n};\r\nconst options = {\r\n    maintainAspectRatio: false, \r\n    scales: {\r\n      y:{\r\n          ticks: {\r\n            color: \"black\",\r\n            font:{\r\n                weight: \"bold\"\r\n            }\r\n          }\r\n        },\r\n      x:{\r\n          ticks:{\r\n              color: \"black\",\r\n              font:{\r\n                  weight: \"bold\",\r\n              },\r\n          }\r\n      },\r\n    },\r\n  };\r\n\r\n    return(\r\n        <div className='soldAmount-chart'>\r\n            <Line data={data} options={options} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PriceDifference from './Charts/PriceDifference';\r\nimport LeftQuantity from './Charts/LeftQuantity';\r\nimport AverageSellPrice from './Charts/AverageSellPrice';\r\nimport SoldAmount from './Charts/SoldAmount';\r\n\r\nimport '../Visualization/ItemInformation.css';\r\n\r\nexport default function ItemInformation(props){\r\n\r\n    const [ebayItemName, setEbayItemName] = useState([]);\r\n    const [historyItems, setHistoryItems] = useState([]);\r\n    useEffect(() => {\r\n        const fetchItemData = async () =>{\r\n            const results =  await axios(\r\n                {\r\n                    method: 'post',\r\n                    url: 'http://91.225.104.238:3000/api/query/stats',\r\n                    data: {\r\n                        id: props.id\r\n                    }\r\n                }\r\n            )\r\n            setEbayItemName(results.data.data); \r\n            setHistoryItems(results.data.data.history.map(({ date }) => date))  \r\n            console.log(results.data.data)\r\n         };\r\n         fetchItemData();\r\n    }, [props.id]);\r\n\r\n    return(\r\n        <>\r\n        <div className='table-information'>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Item Name:</th>\r\n                        <td>\r\n                            <div>{ebayItemName.name}</div>\r\n                        </td>\r\n                        <th>Current Average Price:</th>\r\n                        <td>\r\n                            <div>{ebayItemName.currentAvgPrice}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Item Currency:</th>\r\n                        <td>\r\n                            <div>{ebayItemName.currency}</div>\r\n                        </td>\r\n                        <th>Current Average Sold Price:</th>\r\n                        <td>\r\n                            <div>{ebayItemName.currentAvgSoldPrice}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Item URL link:</th>\r\n                        <td>\r\n                            <a href={ebayItemName.url} rel='noreferrer' target='_blank'>\r\n                                <span>  Ebay.com/{ebayItemName.name}</span>\r\n                            </a>\r\n                        </td>\r\n                        <th>Current Remaining Quantity: </th>\r\n                        <td>\r\n                            <div>{ebayItemName.currentRemainingQuantity}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tracking Item From:</th>\r\n                        <td>\r\n                            <div>{historyItems[0]}</div>\r\n                        </td>\r\n                        <th>Current Sold Quantity:</th>\r\n                        <td>\r\n                            <div>{ebayItemName.currentSoldQuantity}</div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <PriceDifference data={ebayItemName} />\r\n        <LeftQuantity  data={ebayItemName} />\r\n        <AverageSellPrice  data={ebayItemName} />\r\n        <SoldAmount data={ebayItemName} />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ItemInformation from '../Components/ItemInformation.js';\r\nimport '../Visualization/ItemInformationContainer.css';\r\n\r\nexport default function ItemInforamtionContainer({givenID}) {\r\n    return (\r\n        <div className='itemInformation-container'>\r\n            <ItemInformation id={givenID}/>\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport ItemsContainer from './Components/ItemsContainer.js';\r\nimport ItemInforamtionContainer from './Components/ItemInformationContainer.js';\r\n\r\nimport './Visualization/App.css';\r\n\r\nconst App =() => {\r\n\r\n  const [ID, setID] = useState(1);\r\n\r\n  return (\r\n    <div className=\"body-container\">\r\n      <ItemsContainer ID={ID} setID={value => setID(value)}/>\r\n      <ItemInforamtionContainer givenID={ID}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}