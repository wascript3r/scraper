{"version":3,"sources":["Components/ItemsContainer.js","Components/Charts/PriceDifference.js","Components/Charts/LeftQuantity.js","Components/Charts/AverageSellPrice.js","Components/Charts/SoldAmount.js","Components/ItemInformation.js","Components/ItemInformationContainer.js","App.js","reportWebVitals.js","index.js"],"names":["ItemsContainer","ID","setID","useState","ebayItems","setEbayItems","useEffect","a","axios","result","data","queries","fetchData","className","type","data-toggle","data-target","class","id","map","item","onClick","name","PriceDifference","props","historyData","setData","history","labels","slice","reverse","date","datasets","label","avgPrice","fill","backgroundColor","borderColor","pointBorderWidth","pointBorderColor","pointRadius","options","maintainAspectRatio","plugins","legend","color","font","size","weight","scales","y","ticks","x","LeftQuantity","remainingQuantity","AverageSellPrice","soldHistory","Soldamount","totalQuantity","ItemInformation","ebayItemName","setEbayItemName","historyItems","setHistoryItems","method","url","results","console","log","fetchItemData","currentAvgPrice","currency","currentAvgSoldPrice","href","rel","target","currentRemainingQuantity","currentSoldQuantity","ItemInforamtionContainer","givenID","App","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.781c6968.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ScraperLogo from '../Components/Logo.js';\nimport '../Visualization/ItemsContainer.css';\n\nexport default function ItemsContainer({ID, setID}) {\n    const [ebayItems, setEbayItems] = useState([]);\n    useEffect(() => {\n     \n         /* This function gets the data from the API URL */\n        const fetchData = async () =>{\n             const result =  await axios('http://91.225.104.238:3000/api/queries/get');\n             setEbayItems(result.data.data.queries);    \n          };\n          fetchData();\n       }, [])\n\n    // our brand name\n    // <ScraperLogo />\n  \n    return (\n        <div className='items-container sidebar-nav container'>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\">\n                <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        {ebayItems.map(item => (\n                            <li key={item.name} onClick={() => setID(item.id)} className=\"nav-item btn btn-outline-light button\">\n                                <a className=\"nav-link text-white\">{item.name}</a>\n                                {/* <hr /> */}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport '../../Visualization/PriceDifference.css';\n\nexport default function PriceDifference(props){\n\n    const [historyData, setData] = useState([])\n    useEffect(() => {\n     \n       const takeData = () =>{\n            setData(props.data.history);    \n         };\n         takeData();\n      }, [props.data.history])\n\nconst data = {\n  labels: historyData?.slice(0).reverse().map(item => (\n      item.date\n  )),\n  datasets: [\n    {\n      label: 'KainÅ³ pokytis',\n      data:  historyData?.slice(0).reverse().map(item => (\n        item.avgPrice\n    )),\n      fill: false,\n      backgroundColor: 'rgb(173, 83, 0)',\n      borderColor: 'rgb(221, 137, 35)',\n      pointBorderWidth: 5,\n      pointBorderColor: 'rgb(173, 83, 0)',\n      pointRadius: 3,\n    },\n  ],\n};\n\nconst options = {\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      labels:{\n        color: 'black',\n        font:{\n          size: 15,\n          weight: \"600\",\n        }\n      }\n    }\n  },\n  scales: {\n    y:{\n        ticks: {\n          color: \"black\",\n          font:{\n              weight: \"bold\"\n          }\n        }\n      },\n    x:{\n        ticks:{\n            color: \"black\",\n            font:{\n                weight: \"bold\",\n            },\n        }\n    },\n  },\n};\n    return(\n        <div className='price-chart'>\n          <Line data={data} options={options} />\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport '../../Visualization/LeftQuantity.css'\nexport default function LeftQuantity(props){\n    const [historyData, setData] = useState([])\n\n    useEffect(() => {\n     \n       const takeData = () =>{\n            setData(props.data.history);    \n         };\n         takeData();\n      }, [props.data.history])\n\n\nconst data = {\n  labels: historyData?.slice(0).reverse().map(item => (\n      item.date\n  )),\n  datasets: [\n    {\n      label: 'PrekiÅ³ likutis',\n      data:  historyData?.slice(0).reverse().map(item => (\n        item.remainingQuantity\n    )),\n      fill: false,\n      backgroundColor: 'rgb(173, 83, 0)',\n      borderColor: 'rgb(221, 137, 35)',\n      pointBorderWidth: 5,\n      pointBorderColor: 'rgb(173, 83, 0)',\n      pointRadius: 3,\n    },\n  ],\n};\nconst options = {\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        labels:{\n          color: 'black',\n          font:{\n            size: 15,\n            weight: \"600\",\n          }\n        }\n      }\n    }, \n    scales: {\n      y:{\n          ticks: {\n            color: \"black\",\n            font:{\n                weight: \"bold\"\n            }\n          }\n        },\n      x:{\n          ticks:{\n            color: \"black\",\n              font:{\n                  weight: \"bold\",\n              },\n          }\n      },\n    },\n  };\n\n    return(\n        <div className='leftQuantity-chart'>\n            <Line data={data} options={options} />\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport '../../Visualization/AverageSellPrice.css';\n\nexport default function AverageSellPrice(props){\n    const [historyData, setData] = useState([])\n\n    useEffect(() => {\n     \n       const takeData = () =>{\n            setData(props.data.soldHistory);    \n         };\n         takeData();\n      }, [props.data.soldHistory])\n\nconst data = {\n  labels: historyData?.slice(0).reverse().map(item => (\n      item.date\n  )),\n  datasets: [\n    {\n      label: 'VidutinÄ pardavimo kaina',\n      data:  historyData?.slice(0).reverse().map(item => (\n        item.avgPrice\n    )),\n      fill: false,\n      backgroundColor: 'rgb(173, 83, 0)',\n      borderColor: 'rgb(221, 137, 35)',\n      pointBorderWidth: 5,\n      pointBorderColor: 'rgb(173, 83, 0)',\n      pointRadius: 3,\n    },\n  ],\n};\nconst options = {\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        labels:{\n          color: 'black',\n          font:{\n            size: 15,\n            weight: \"600\",\n          }\n        }\n      }\n    },  \n    scales: {\n      y:{\n          ticks: {\n            color: \"black\",\n            font:{\n                weight: \"bold\"\n            }\n          }\n        },\n      x:{\n          ticks:{\n              color: \"black\",\n              font:{\n                  weight: \"bold\",\n              },\n          }\n      },\n    },\n  };\n\n  return(\n      <div className='averageSellPrice-chart'>\n          <Line data={data} options={options} />\n      </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport '../../Visualization/SoldAmount.css';\n\nexport default function Soldamount(props){\n    const [historyData, setData] = useState([])\n\n    useEffect(() => {\n     \n       const takeData = () =>{\n            setData(props.data.soldHistory);    \n         };\n         takeData();\n      }, [props.data.soldHistory])\n\nconst data = {\n  labels: historyData?.slice(0).reverse().map(item => (\n      item.date\n  )),\n  datasets: [\n    {\n      label: 'Bendras parduotas prekiÅ³ kiekis',\n      data:  historyData?.slice(0).reverse().map(item => (\n        item.totalQuantity\n    )),\n      fill: false,\n      backgroundColor: 'rgb(173, 83, 0)',\n      borderColor: 'rgb(221, 137, 35)',\n      pointBorderWidth: 5,\n      pointBorderColor: 'rgb(173, 83, 0)',\n      pointRadius: 3,\n    },\n  ],\n};\nconst options = {\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        labels:{\n          color: 'black',\n          font:{\n            size: 15,\n            weight: \"600\",\n          }\n        }\n      }\n    },  \n    scales: {\n      y:{\n          ticks: {\n            color: \"black\",\n            font:{\n                weight: \"bold\"\n            }\n          }\n        },\n      x:{\n          ticks:{\n              color: \"black\",\n              font:{\n                  weight: \"bold\",\n              },\n          }\n      },\n    },\n  };\n\n    return(\n        <div className='soldAmount-chart '>\n            <Line data={data} options={options} />\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PriceDifference from './Charts/PriceDifference';\nimport LeftQuantity from './Charts/LeftQuantity';\nimport AverageSellPrice from './Charts/AverageSellPrice';\nimport SoldAmount from './Charts/SoldAmount';\n\nimport '../Visualization/ItemInformation.css';\n\nexport default function ItemInformation(props){\n\n    const [ebayItemName, setEbayItemName] = useState([]);\n    const [historyItems, setHistoryItems] = useState([]);\n    useEffect(() => {\n        const fetchItemData = async () =>{\n            const results =  await axios(\n                {\n                    method: 'post',\n                    url: 'http://91.225.104.238:3000/api/query/stats',\n                    data: {\n                        id: props.id\n                    }\n                }\n            )\n            setEbayItemName(results.data.data); \n            setHistoryItems(results.data.data.history.map(({ date }) => date))  \n            console.log(results.data.data)\n         };\n         fetchItemData();\n    }, [props.id]);\n\n    return(\n        <>\n        <div className='table-information table-responsive'>\n            <table className=\"table table-striped table-hover table-bordered\">\n                <tbody>\n                    <tr>\n                        <th>Item Name:</th>\n                        <td>\n                            <div>{ebayItemName.name}</div>\n                        </td>\n                        <th>Current Average Price:</th>\n                        <td>\n                            <div>{ebayItemName.currentAvgPrice}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Item Currency:</th>\n                        <td>\n                            <div>{ebayItemName.currency}</div>\n                        </td>\n                        <th>Current Average Sold Price:</th>\n                        <td>\n                            <div>{ebayItemName.currentAvgSoldPrice}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Item URL link:</th>\n                        <td>\n                            <a href={ebayItemName.url} rel='noreferrer' target='_blank'>\n                                <span>  Ebay.com/{ebayItemName.name}</span>\n                            </a>\n                        </td>\n                        <th>Current Remaining Quantity: </th>\n                        <td>\n                            <div>{ebayItemName.currentRemainingQuantity}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Tracking Item From:</th>\n                        <td>\n                            <div>{historyItems[0]}</div>\n                        </td>\n                        <th>Current Sold Quantity:</th>\n                        <td>\n                            <div>{ebayItemName.currentSoldQuantity}</div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <PriceDifference data={ebayItemName} />\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n            <LeftQuantity  data={ebayItemName} />\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n            <AverageSellPrice  data={ebayItemName} />\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n            <SoldAmount data={ebayItemName} />\n            </div>\n        </div>\n        </>\n    )\n}\n","import React from 'react';\nimport ItemInformation from '../Components/ItemInformation.js';\n// import '../Visualization/ItemInformationContainer.css';\n\nexport default function ItemInforamtionContainer({givenID}) {\n    return (\n        <div className='itemInformation-container'>\n            <ItemInformation id={givenID}/>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport ItemsContainer from './Components/ItemsContainer.js';\nimport ItemInforamtionContainer from './Components/ItemInformationContainer.js';\n\n// import './Visualization/App.css';\n\nconst App =() => {\n\n  const [ID, setID] = useState(1);\n\n  return (\n    <div className=\"body-container container-fluid\">\n        <div className=\"row\">\n            <div className=\"col-sm-2 bg-secondary\">\n                <ItemsContainer ID={ID} setID={value => setID(value)}/>\n            </div>\n            <div className=\"col-sm-10 bg-light\">\n                <ItemInforamtionContainer givenID={ID}/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}